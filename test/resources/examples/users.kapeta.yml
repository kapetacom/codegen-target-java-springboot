kind: kapeta/block-type-service:0.0.2
metadata:
  name: kapeta/users
spec:
  target:
    kind: kapeta/language-target-java-spring-boot:local
    options:
      groupId: org.mycompany.services
      artifactId: users
      basePackage: org.mycompany.services.users
  configuration:
    source:
      type: kapeta-dsl
      value: |-
          type Service {
              @secret
              instance: Instance
        
              @secret
              key: string
          }
        
          type Email {
              // Sender for e-mails. Note that you should be allowed to send e-mails from this domain and user
              @global
              from: string = 'support@kapeta.com'
          }

  entities:
    types:
      - name: User
        type: dto
      - name: FileContent
        type: dto
      - name: Artifact
        type: dto
      - name: FileArtifact
        type: dto
      - name: UserAuth
        type: dto
    source:
      type: kapeta-dsl
      value: |-
        type User {
          id: string
          name?: string
          email: string
          metadata?: {
            age:integer
            gender:string
            bio:string
          }
        }
        
        type FileContent {
          name: string
          content: string
        }
        
        type Artifact<T> {
          id: string
          name: string
          data: T
        }
        
        type FileArtifact extends Artifact<FileContent> {
          
        }
        
        type UserAuth {
          username: string
          password: string
        }

  consumers:
    - kind: kapeta/resource-type-rabbitmq-subscriber:local
      metadata:
        name: anyEvents
      spec:
        payloadType:
          type: any
        port:
          name: amqp
          type: amqp
    - kind: kapeta/resource-type-rabbitmq-subscriber:local
      metadata:
        name: events
      spec:
        payloadType:
          type: User
        port:
          name: amqp
          type: amqp
    - kind: kapeta/resource-type-postgresql:0.0.2
      metadata:
        name: usersdb
      spec:
        port:
          type: postgres
        models:
          - type: model
            name: Entry
            properties:
              id:
                type: string
                primary: true
              name:
                type: string
        source:
          type: kaplang
          version: 1.14.2
          value: |-
            type Entry {
                @Id
                id: string
                name: string
            }

    - kind: kapeta/resource-type-smtp-client:0.0.6
      metadata:
        name: smtpclient
    - kind: kapeta/resource-type-cloud-bucket:0.0.1
      metadata:
        name: userAvatars
    - kind: kapeta/resource-type-pubsub-subscriber:local
      metadata:
        name: userAuths
      spec:
        port:
          name: http
          type: http
        payloadType:
          type: UserAuth
    - kind: kapeta/resource-type-pubsub-subscriber:local
      metadata:
        name: anyPubSub
      spec:
        port:
          name: http
          type: http
        payloadType:
          type: any
  providers:
    - kind: kapeta/resource-type-rest-api:0.0.4
      metadata:
        name: users
      spec:
        source:
          type: kaplang
          version: 0.0.1
          value: |-
              // Create user
              @POST("/users/{id}")
              createUser(@Path id: string, @Body user: User, @Header metadata: Map<string, string>): User
            
              // Get user by id
              @GET("/users/{id}")
              getUser(@Path id: string): User
          
              // Delete user by id
              @DELETE("/users/{id}")
              deleteUser(@Path id: string): void
          
              // Authenticate user
              @POST("/users/authenticate")
              authenticate(@Body user: UserAuth): User
          
              // Get all users
              @GET("/users")
              listUsers(@Query filter?:Set<string>): User[]


    - kind: kapeta/resource-type-auth-jwt-provider:1.0.1
      metadata:
        name: authjwtprovider
      spec:
        port:
          name: http
          type: http